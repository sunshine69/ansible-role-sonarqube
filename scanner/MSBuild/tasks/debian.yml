- name: Install dependency_packages
  apt:
    name: "{{ item }}"
    state: "present"
    update_cache: yes
    cache_valid_time: 600
  with_items: "{{ dependency_packages }}"

- name: Make sure {{ sonar_scanner_extraction_dir }} exists
  file:
    path: "{{ sonar_scanner_extraction_dir }}"
    state: directory

- name: Unpack {{ sonar_scanner_package_url }} to {{ sonar_extraction_dir }}
  unarchive:
    src: "{{ sonar_scanner_package_url }}"
    remote_src: yes
    dest: "{{ sonar_scanner_extraction_dir }}"
    owner: root
    group: "{{ bamboo_group|default('root') }}"
    mode: 0755

- name: Template SonarQube.Analysis.xml
  template:
    src: "SonarQube.Analysis.xml.j2"
    dest: "{{ sonar_scanner_install_dir }}/{{ sonar_scanner_msbuild_version }}/SonarQube.Analysis.xml"
    owner: "root"
    group: "{{ bamboo_group|default('root') }}"
    mode: 0640
    backup: yes
  register: sonarqube_replace_analysis_file_output

- name: Find the sonar-scanner - SonarQube Scanner Startup Script for Unix
  find:
    paths: "{{ sonar_scanner_extraction_dir }}"
    patterns: '{{ sonar_scanner_startup_script_name }}'
    recurse: yes
  register: sonar_scanner_find_path

- name: Template sonar-scanner.properties file
  template:
    src: "sonar-scanner.properties.j2"
    dest: "{{ sonar_scanner_find_path.files.0.path|dirname }}/../conf/sonar-scanner.properties"
    owner: "root"
    group: "{{ bamboo_group|default('root') }}"
    mode: 0640
    backup: yes
  register: sonarqube_replace_sonarproperties_file_output

# Until now we have a working deployment already. Run
# mono /opt/sonar-scanner-msbuild/${bamboo_sonar_scanner_msbuild_version}/SonarQube.Scanner.MSBuild.exe
# should work

# The part below is a try to make the bamboo built in SonarQube system to find
# the executable and passing params. These are not well documented in bamboo and
# does not support per-branch scanning so currently we use the manualy scan
# command in bamboo script to start and end the scanning job. Thus these
# deployment below are not a must at all as of this time

# Leave it here - we might go back to use this one day

- name: Create directory to hold the Linux shim script, which the Bamboo plugin hardcodes
  file:
    state: directory
    path: "{{ sonar_scanner_extraction_dir }}/linux/bin"
    owner: root
    group: "{{ bamboo_group|default('root') }}"
    mode: 0755

# The built-in bamboo find the exec using the capabilities path and then
# linux/bin/MSBuild.SonarQube.Runner.exe
# Thus we deploy the wrapper here which execute mono with the real exe file.

# No guarantee the exe name in dest is correct - if someone tries to use the
# built in - good luck

- name: Create shim shell script (MSBuild.SonarQube.Runner.exe) which uses mono to invoke the real EXE
  template:
    src: "SonarScanner.MSBuild.exe.j2"
    dest: "{{ sonar_scanner_extraction_dir }}/linux/bin/MSBuild.SonarQube.Runner.exe"
    owner: root
    group: "{{ bamboo_group|default('root') }}"
    mode: 0755
